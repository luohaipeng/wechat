<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.petrel.mapper.CatalogMapper" >
  <resultMap id="BaseResultMap" type="com.petrel.domain.Catalog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="p_id" property="pId" jdbcType="BIGINT" />
    <result column="is_parent" property="isParent" jdbcType="TINYINT" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from catalog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.petrel.domain.Catalog" useGeneratedKeys="true" keyProperty="id" >
    insert into catalog (name, code, sort, 
      p_id, is_parent)
    values (#{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, 
      #{pId,jdbcType=BIGINT}, #{isParent,jdbcType=TINYINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.petrel.domain.Catalog" >
    update catalog
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      p_id = #{pId,jdbcType=BIGINT},
      is_parent = #{isParent,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select *
    from catalog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select *
    from catalog order by sort asc
  </select>
  <select id="getChild" resultMap="BaseResultMap">
    select * from catalog
    <choose>
      <when test="catalogId == null">
        <where>
          p_id is null
        </where>
      </when>
      <otherwise>
        <where>
          p_id = #{catalogId}
        </where>
      </otherwise>
    </choose>
    order by sort asc
  </select>

  <select id="countProductNumber" resultType="int">
    select count(id) from product where catalog_id = #{catalogId}
  </select>
  <select id="countPropertyNumber" resultType="int">
    select count(id) from property where catalog_id = #{catalogId}
  </select>
  <select id="getParentCatalogList" resultMap="BaseResultMap">
    select * from catalog where find_in_set(id,getCatalogList(#{catalogId}))
  </select>
</mapper>